@using InventoryManagement.Web.Data.Models
@using InventoryManagement.Web.ViewModels
@using InventoryManagement.Web.Data.Models.Enums
@model InventoryDetailsViewModel

@{
    ViewData["Title"] = Model.Inventory.Title;
}

<h1 class="mb-4">@Model.Inventory.Title</h1>

<p>Created by: @Model.Inventory.Creator.UserName on @Model.Inventory.CreatedAt.ToShortDateString()</p>
<p>Category: @Model.Inventory.Category.Name</p>
<div class="mb-4">
    @if (!string.IsNullOrEmpty(Model.Inventory.Description))
    {
        <p>@Model.Inventory.Description</p>
    }
    @if (!string.IsNullOrEmpty(Model.Inventory.ImageUrl))
    {
        <img src="@Model.Inventory.ImageUrl" alt="Inventory Image" class="img-fluid rounded" style="max-height: 200px;" />
    }
</div>

@if (Model.IsOwnerOrAdmin)
{
    <div class="mb-4">
        <a asp-controller="Inventory" asp-action="Edit" asp-route-id="@Model.Inventory.Id" class="btn btn-warning me-2">Edit Inventory</a>
        <a asp-controller="Inventory" asp-action="Export" asp-route-id="@Model.Inventory.Id" class="btn btn-primary me-2">Export to Excel</a>
        <form asp-controller="Inventory" asp-action="Delete" asp-route-id="@Model.Inventory.Id" method="post" style="display:inline;">
            <button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this inventory?');">Delete Inventory</button>
            @Html.AntiForgeryToken()
        </form>
    </div>
}

<ul class="nav nav-tabs" id="myTab" role="tablist">
    <li class="nav-item">
        <a class="nav-link active" id="items-tab" data-bs-toggle="tab" href="#items" role="tab">Items</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="discussion-tab" data-bs-toggle="tab" href="#discussion" role="tab">Discussion</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="stats-tab" data-bs-toggle="tab" href="#stats" role="tab">Statistics</a>
    </li>
    @if (Model.IsOwnerOrAdmin)
    {
        <li class="nav-item">
            <a class="nav-link" id="settings-tab" data-bs-toggle="tab" href="#settings" role="tab">Settings</a>
        </li>
    }
</ul>
<div class="tab-content mt-3" id="myTabContent">
    <div class="tab-pane fade show active" id="items" role="tabpanel">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h3>Items in Inventory</h3>
            @if (Model.HasWriteAccess)
            {
                <a asp-controller="Item" asp-action="Create" asp-route-inventoryId="@Model.Inventory.Id" class="btn btn-primary">Add Item</a>
            }
        </div>
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>Custom ID</th>
                    <th>Created At</th>
                    @foreach (var field in Model.Inventory.FieldDefinitions.Where(f => f.ShowInTable).OrderBy(f => f.Title))
                    {
                        <th>@field.Title</th>
                    }
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Items)
                {
                    <tr>
                        <td>
                            <a asp-controller="Item" asp-action="Details" asp-route-id="@item.Id">@item.CustomId</a>
                        </td>
                        <td>@item.CreatedAt.ToShortDateString()</td>
                        @foreach (var field in Model.Inventory.FieldDefinitions.Where(f => f.ShowInTable).OrderBy(f => f.Title))
                        {
                            var customFieldValue = item.CustomFields.FirstOrDefault(cf => cf.FieldDefinitionId == field.Id);
                            <td>
                                @if (customFieldValue != null)
                                {
                                    switch (field.Type)
                                    {
                                        case InventoryManagement.Web.Data.Models.Enums.FieldType.String:
                                            @customFieldValue.StringValue
                                            break;
                                        case InventoryManagement.Web.Data.Models.Enums.FieldType.Int:
                                            @customFieldValue.IntValue
                                            break;
                                        case InventoryManagement.Web.Data.Models.Enums.FieldType.Bool:
                                            @customFieldValue.BoolValue
                                            break;
                                        default:
                                            <span></span>
                                            break;
                                    }
                                }
                            </td>
                        }
                        <td>
                            <div class="dropdown">
                                <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" id="dropdownMenuButton_@item.Id" data-bs-toggle="dropdown" aria-expanded="false">
                                    Actions
                                </button>
                                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton_@item.Id">
                                    <li><a class="dropdown-item" asp-controller="Item" asp-action="Details" asp-route-id="@item.Id">Details</a></li>
                                    @if (Model.HasWriteAccess)
                                    {
                                        <li><a class="dropdown-item" asp-controller="Item" asp-action="Edit" asp-route-id="@item.Id">Edit</a></li>
                                        <li>
                                            <form asp-controller="Item" asp-action="Delete" asp-route-id="@item.Id" method="post" style="display:inline;">
                                                <button type="submit" class="dropdown-item text-danger" onclick="return confirm('Are you sure you want to delete this item?');">Delete</button>
                                                @Html.AntiForgeryToken()
                                            </form>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>


<div class="tab-pane fade" id="discussion" role="tabpanel">
    <h3>Discussion</h3>
    @if (Model.AllComments.Any())
    {
        <div id="comments-list" class="mt-3">
            @foreach (var comment in Model.AllComments.OrderByDescending(c => c.CreatedAt))
            {
                <div class="card mb-2">
                    <div class="card-body">
                        <h5 class="card-title">@comment.User?.UserName - @comment.Item.CustomId</h5>
                        <p class="card-text">@comment.Text</p>
                        <small class="text-muted">@comment.CreatedAt.ToString("g")</small>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <p>No comments found for this inventory.</p>
    }
</div>

<div class="tab-pane fade" id="stats" role="tabpanel">
    <h3>Statistics</h3>
    <div class="card p-3">
        <h4>Total Items: @Model.Statistics.TotalItems</h4>
        <ul class="list-group list-group-flush">
            @foreach (var stat in Model.Statistics.FieldStatistics)
            {
                <li class="list-group-item">
                    <strong>@stat.Title (@stat.Type)</strong>
                    @if (stat.MinValue.HasValue)
                    {
                        <p>Min: @stat.MinValue, Max: @stat.MaxValue, Avg: @stat.AverageValue.GetValueOrDefault().ToString("F2")</p>
                    }
                    @if (stat.MostPopularValues != null && stat.MostPopularValues.Any())
                    {
                        <p>Most popular: @string.Join(", ", stat.MostPopularValues)</p>
                    }
                </li>
            }
        </ul>
    </div>
</div>

@if (Model.IsOwnerOrAdmin)
{
    <div class="tab-pane fade" id="settings" role="tabpanel">
        <h3>Settings</h3>
        <p>Go to settings page to change inventory properties.</p>
        <a asp-controller="Inventory" asp-action="Edit" asp-route-id="@Model.Inventory.Id" class="btn btn-primary">Go to Settings</a>
    </div>
}
</div>
</div>
@section Scripts {
    <script src="https://unpkg.com/microsoft-signalr/dist/browser/signalr.min.js"></script>
    <script>
        var triggerTabList = [].slice.call(document.querySelectorAll('#myTab a'))
        triggerTabList.forEach(function (triggerEl) {
            var tabTrigger = new bootstrap.Tab(triggerEl)
            triggerEl.addEventListener('click', function (event) {
                event.preventDefault()
                tabTrigger.show()
            })
        })
    </script>
   
}