@using InventoryManagement.Web.Data.Models.Enums
@using InventoryManagement.Web.ViewModels
@model ItemDetailsViewModel

@{
    ViewData["Title"] = Model.Item.CustomId;
}

<h1 class="mb-4">@Model.Item.CustomId</h1>

<div class="mb-4">
    <p>Created by: @Model.Item.CreatedBy.UserName on @Model.Item.CreatedAt.ToShortDateString()</p>
</div>

<ul class="nav nav-tabs" id="myTab" role="tablist">
    <li class="nav-item">
        <a class="nav-link @(ViewData["ActiveTab"] == null || ViewData["ActiveTab"].ToString() == "details" ? "active" : "")" id="details-tab" data-bs-toggle="tab" href="#details" role="tab">Details</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(ViewData["ActiveTab"] != null && ViewData["ActiveTab"].ToString() == "discussion" ? "active" : "")" id="discussion-tab" data-bs-toggle="tab" href="#discussion" role="tab">Discussion</a>
    </li>
</ul>

@if (Model.HasWriteAccess)
{
    <div class="mb-4">
        <a asp-controller="Item" asp-action="Edit" asp-route-id="@Model.Item.Id" class="btn btn-warning me-2">Edit Item</a>
        <form asp-controller="Item" asp-action="Delete" asp-route-id="@Model.Item.Id" method="post" style="display:inline;">
            <button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete this item?');">Delete Item</button>
            @Html.AntiForgeryToken()
        </form>
    </div>
}

<div class="tab-content mt-3" id="myTabContent">
    <div class="tab-pane fade @(ViewData["ActiveTab"] == null || ViewData["ActiveTab"].ToString() == "details" ? "show active" : "")" id="details" role="tabpanel">
        <div class="card p-3">
            <h4>Fixed Fields</h4>
            <p><strong>Custom ID:</strong> @Model.Item.CustomId</p>
            <p><strong>Created By:</strong> @Model.Item.CreatedBy.UserName</p>
            <p><strong>Created At:</strong> @Model.Item.CreatedAt.ToShortDateString()</p>

            @if (Model.Item.CustomFields != null && Model.Item.CustomFields.Any())
            {
                <h4 class="mt-4">Custom Fields</h4>
                @foreach (var customField in Model.Item.CustomFields)
                {
                    <p>
                        <strong>@customField.FieldDefinition.Title:</strong>
                        @switch (customField.FieldDefinition.Type)
                        {
                            case FieldType.String:
                                @customField.StringValue
                                break;
                            case FieldType.Int:
                                @customField.IntValue
                                break;
                            case FieldType.Bool:
                                @customField.BoolValue
                                break;
                            default:
                                <span></span>
                                break;
                        }
                    </p>
                }
            }
        </div>
    </div>
    @{
        var itemIteractionsModel = new ItemInteractionsViewModel
            {
                ItemId = Model.Item.Id,
                Comments = Model.Comments,
                LikesCount = Model.LikesCount,
                IsLikedByUser = Model.IsLikedByUser
            };
    }
    <div class="tab-pane fade @(ViewData["ActiveTab"] != null && ViewData["ActiveTab"].ToString() == "discussion" ? "show active" : "")" id="discussion" role="tabpanel">
        <partial name="_ItemInteractionsPartial" model="@(itemIteractionsModel)" />
    </div>
</div>

@section Scripts {
    <script>

        var triggerTabList = [].slice.call(document.querySelectorAll('#myTab a'))
        triggerTabList.forEach(function (triggerEl) {
            var tabTrigger = new bootstrap.Tab(triggerEl)
            triggerEl.addEventListener('click', function (event) {
                event.preventDefault()
                tabTrigger.show()
            })
        })

    </script>
}
