@using InventoryManagement.Web.ViewModels
@model ItemInteractionsViewModel

<div class="row">
    <div class="col-md-8">
        <h3>Comments</h3>
        <div id="comments-list" class="mt-3">
            @foreach (var comment in Model.Comments)
            {
                <div class="card mb-2">
                    <div class="card-body">
                        <h5 class="card-title">@comment.User?.UserName</h5>
                        <p class="card-text">@comment.Text</p>
                        <small class="text-muted">@comment.CreatedAt.ToString("g")</small>
                    </div>
                </div>
            }
        </div>

        @if (User.Identity?.IsAuthenticated == true)
        {
            <div class="mt-4">
                <h4>Add a Comment</h4>
                <form asp-controller="ItemLikeComment" asp-action="AddComment" asp-route-itemId="@Model.ItemId" method="post">
                    <div class="form-group">
                        <textarea id ="comment-text" name="Text" class="form-control" rows="3" placeholder="Write your comment..."></textarea>
                    </div>
                    <button id="post-comment" type="submit" class="btn btn-primary mt-2">Post Comment</button>
                    @Html.AntiForgeryToken()
                </form>
            </div>
        }
        else
        {
            <div class="alert alert-info mt-4">
                <a asp-controller="Auth" asp-action="Login">Login</a> to leave a comment.
            </div>
        }
    </div>

    <div class="col-md-4">
        <h3>Likes</h3>
        <div class="d-flex align-items-center mt-3">
            <span class="me-2">@Model.LikesCount</span>
            @if (User.Identity?.IsAuthenticated == true)
            {
                <form asp-controller="ItemLikeComment" asp-action="ToggleLike" asp-route-itemId="@Model.ItemId" method="post">
                    <button type="submit" class="btn btn-sm @(Model.IsLikedByUser ? "btn-danger" : "btn-outline-primary")">
                        @if (Model.IsLikedByUser)
                        {
                            <span>Unlike</span>
                        }
                        else
                        {
                            <span>Like</span>
                        }
                    </button>
                    @Html.AntiForgeryToken()
                </form>
            }
            else
            {
                <div class="alert alert-info p-2 m-0">
                    <a asp-controller="Auth" asp-action="Login">Login</a> to like.
                </div>
            }
        </div>

    </div>

</div>

@* @section Scripts {

    <script>
        const hubConnection = new signalR.HubConnectionBuilder()
            .withUrl("/commentsHub")
            .build();

        hubConnection.on("ReceiveComment", function(userName, text, createdAt) {
            const commentsList = document.getElementById("comments-list");
            const newCommentHtml = `
                <div class="card mb-2">
                    <div class="card-body">
                        <h5 class="card-title">${userName}</h5>
                        <p class="card-text">${text}</p>
                        <small class="text-muted">${createdAt}</small>
                    </div>
                </div>
            `;
            commentsList.insertAdjacentHTML('afterbegin', newCommentHtml);
            console.log(text);
        });
                // Event handler for the form submission.
        document.getElementById("post-comment").addEventListener("submit", function (event) {
            event.preventDefault();

            var user = "vazha";// document.getElementById("user-input").value;
            var currentdate = new Date();
            var message = document.getElementById("comment-text").value;
            var itemId = '@Model.ItemId';
            console.log(message, currentdate);

            connection.invoke("SendComment",itemId, user, message, currentdate).catch(function (err) {
                return console.error(err.toString());
            });

            //document.getElementById("message-input").value = ""; // Clear the message input field.
        });

        hubConnection.start().then(() => {
            const itemId = '@Model.ItemId';
            hubConnection.invoke("JoinItemDiscussion", itemId)
                .catch(err => console.error(err.toString()));
        }).catch(function(err) {
            return console.error(err.toString());
        });

    </script>
} *@
