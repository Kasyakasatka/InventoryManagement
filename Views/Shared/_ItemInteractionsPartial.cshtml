@using InventoryManagement.Web.ViewModels
@model ItemInteractionsViewModel

<div class="row">
    <div class="col-md-8">
        <h3>Comments</h3>
        <div id="comments-list" class="mt-3">
            @foreach (var comment in Model.Comments)
            {
                <div class="card mb-2">
                    <div class="card-body">
                        <h5 class="card-title">@comment.User?.UserName</h5>
                        <p class="card-text">@comment.Text</p>
                        <small class="text-muted">@comment.CreatedAt.ToString("g")</small>
                    </div>
                </div>
            }
        </div>

        @if (User.Identity?.IsAuthenticated == true)
        {
            <div class="mt-4">
                <h4>Add a Comment</h4>
                <form id="post-comment">  @* asp-controller="ItemLikeComment" asp-action="AddComment" asp-route-itemId="@Model.ItemId" method="post"> *@
                    <div class="form-group">
                        <textarea id="comment-text" name="Text" class="form-control" rows="3" placeholder="Write your comment..."></textarea>
                    </div>
                    <button id="add-comment" type="button" class="btn btn-primary mt-2">Post Comment</button>
                </form>
            </div>
        }
        else
        {
            <div class="alert alert-info mt-4">
                <a asp-controller="Auth" asp-action="Login">Login</a> to leave a comment.
            </div>
        }
    </div>

    <div class="col-md-4">
        <h3>Likes</h3>
        <div class="d-flex align-items-center mt-3">
            <span class="me-2">@Model.LikesCount</span>
            @if (User.Identity?.IsAuthenticated == true)
            {
                <form asp-controller="ItemLikeComment" asp-action="ToggleLike" asp-route-itemId="@Model.ItemId" method="post">
                    <button type="submit" class="btn btn-sm @(Model.IsLikedByUser ? "btn-danger" : "btn-outline-primary")">
                        @if (Model.IsLikedByUser)
                        {
                            <span>Unlike</span>
                        }
                        else
                        {
                            <span>Like</span>
                        }
                    </button>
                    @Html.AntiForgeryToken()
                </form>
            }
            else
            {
                <div class="alert alert-info p-2 m-0">
                    <a asp-controller="Auth" asp-action="Login">Login</a> to like.
                </div>
            }
        </div>
    </div>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://unpkg.com/@@microsoft/signalr@latest/dist/browser/signalr.min.js"></script>
<script>
    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl("/commentsHub")
        .build();

    hubConnection.on("ReceiveComment", function( userName, text, createdAt) {
        const commentsList = document.getElementById("comments-list");
        const newCommentHtml = `
            <div class="card mb-2">
                <div class="card-body">
                    <h5 class="card-title">${userName}</h5>
                    <p class="card-text">${text}</p>
                    <small class="text-muted">${createdAt}</small>
                </div>
            </div>
        `;
        commentsList.insertAdjacentHTML('afterbegin', newCommentHtml);
    });

     $(document).ready(function() {
      $("#add-comment").click(function() {
          const itemId = '@Model.ItemId';
          var text_message =  document.getElementById("comment-text").value;
          const dateTime = new Date();


        hubConnection.invoke("SendComment", itemId, "Dina", text_message, dateTime)
            .catch(err => console.error(err.toString()));
        

        $.ajax({
        type: 'POST',
        url: `/Items/${itemId}/AddComment`,
        contentType: 'application/json',
        headers: {
            'RequestVerificationToken': document.querySelector('[name="__RequestVerificationToken"]').value
        },
        data: JSON.stringify( text_message ),
        success: function(resultData) { 
            document.getElementById("comment-text").value ='';
            
                }
                });
        });
    });
    hubConnection.start().then(() => {
        const itemId = '@Model.ItemId';
        hubConnection.invoke("JoinItemDiscussion", itemId)
            .catch(err => console.error(err.toString()));
    }).catch(function(err) {
        return console.error(err.toString());
    });
</script>

